# reusable workflow
name: .test

on:
  workflow_call:
    inputs:
      refs:
        required: true
        type: string

env:
  SETUP_BUILDX_VERSION: "latest"
  SETUP_BUILDKIT_IMAGE: "moby/buildkit:latest"

jobs:
  run:
    runs-on: ubuntu-24.04
    env:
      TESTFLAGS: -v --timeout=30m
      TEST_IMAGE_BUILD: 0
      TEST_IMAGE_ID: buildkit-bench
      BUILDKIT_RUN_COUNT: 3
    steps:
      -
        name: Export BuildKit refs
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let buildkitRefs = [];
            await core.group(`Solve commit from ref`, async () => {
              for (const ref of `${{ inputs.refs }}`.trim().split(/\r?\n/)) {
                let release = undefined;
                if (ref === 'latest') {
                  release = await github.rest.repos.getRelease({
                    owner: 'moby',
                    repo: 'buildkit',
                    release_id: ref,
                  });
                }
                const commit = await github.rest.repos.getCommit({
                  owner: 'moby',
                  repo: 'buildkit',
                  ref: release ? release.data.tag_name : ref,
                });
                if (release) {
                  core.info(`${ref} -> ${release.data.tag_name} -> ${commit.data.sha}`);
                  buildkitRefs.push(release.data.tag_name);
                } else {
                  core.info(`${ref} -> ${commit.data.sha}`);
                  buildkitRefs.push(ref);
                }
              }
            });
            await core.group(`Export BUILDKIT_REFS`, async () => {
              core.info(JSON.stringify(buildkitRefs, null, 2));
              core.exportVariable('BUILDKIT_REFS', buildkitRefs.join(','));
            });
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.SETUP_BUILDX_VERSION }}
          driver-opts: image=${{ env.SETUP_BUILDKIT_IMAGE }}
          buildkitd-flags: --debug
      -
        name: Build test image
        uses: docker/bake-action@v5
        with:
          targets: tests
          set: |
            *.output=type=docker,name=${{ env.TEST_IMAGE_ID }}
      -
        name: Test
        run: |
          ./hack/test
