name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:

env:
  GO_VERSION: 1.22
  SETUP_BUILDX_VERSION: latest
  SETUP_BUILDKIT_IMAGE: moby/buildkit:latest
  CANDIDATES_REFS: master
  CANDIDATES_LAST_DAYS: 7
  CANDIDATES_LAST_RELEASES: 3

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      includes: ${{ steps.set.outputs.includes }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Set includes
        id: set
        run: |
          go run -mod=vendor ./cmd/refcandidates \
            --refs ${{ env.CANDIDATES_REFS }} \
            --last-days ${{ env.CANDIDATES_LAST_DAYS }} \
            --last-releases ${{ env.CANDIDATES_LAST_RELEASES }} \
            --gha-output includes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-24.04
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.includes) }}
    env:
      TEST_FLAGS: -v --timeout=30m
      TEST_IMAGE_BUILD: 0
      TEST_IMAGE_ID: buildkit-bench
      BUILDKIT_RUN_COUNT: 3
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.SETUP_BUILDX_VERSION }}
          driver-opts: image=${{ env.SETUP_BUILDKIT_IMAGE }}
          buildkitd-flags: --debug
      -
        name: Build test image
        uses: docker/bake-action@v5
        with:
          targets: tests
          set: |
            *.output=type=docker,name=${{ env.TEST_IMAGE_ID }}
        env:
          BUILDKIT_REF: ${{ matrix.ref }}
      -
        name: Test
        run: |
          ./hack/test
      -
        name: Result
        run: |
          jq . ./bin/gotestoutput.json
